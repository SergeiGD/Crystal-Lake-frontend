{"version":3,"file":"js/src_js_common_evo-calendar_evo-starter_js-src_js_common_redirect_js.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA,QAAQ,IAA0C;AAClD,QAAQ,iCAAO,CAAC,yEAAQ,CAAC,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACnC,MAAM,KAAK,EAIN;;AAEL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,6BAA6B,qCAAqC;AAClE;AACA;AACA,uIAAuI,iBAAiB,yBAAyB;AACjL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,8DAA8D;AAC9D,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iBAAiB,yBAAyB;AAC1G;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,UAAU;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,qCAAqC;AAC7D;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kDAAkD;AAClD;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;AACA,oCAAoC,OAAO,OAAO;AAClD,wCAAwC,0BAA0B,OAAO;AACzE;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,0BAA0B;AAC1B,yEAAyE;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oEAAoE,8BAA8B;AAClG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wGAAwG,iBAAiB,yBAAyB;AAClJ;;AAEA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB,oGAAoG,iBAAiB,yBAAyB;AAC9I;AACA;AACA;AACA;AACA,oCAAoC;AACpC,yBAAyB,gBAAgB;AACzC;AACA;AACA,UAAU,oCAAoC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wEAAwE,iBAAiB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,uEAAuE,iBAAiB,yBAAyB;AACjH;AACA;AACA,oCAAoC;AACpC,yBAAyB,gBAAgB;AACzC;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;;;ACzmCsB;AACvB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,IAAI,CAAC;AACL,QAAQ,CAAC,mDAAmD;AAC5D,YAAY,CAAC;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,CAAC;AACL,QAAQ,CAAC,mDAAmD;AAC5D,YAAY,CAAC;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,CAAC,uEAAuE;AAC5E;AACA,CAAC;;;;;;;;;;;ACvFD,CAAC;AACD,IAAI,CAAC;AACL;AACA;AACA,KAAK;AACL;AACA,IAAI,CAAC;AACL;AACA,4FAA4F;AAC5F,4FAA4F;AAC5F;AACA,KAAK;AACL,CAAC","sources":["webpack://crystal-lake-frontend/./src/js/common/evo-calendar/evo-calendar.js","webpack://crystal-lake-frontend/./src/js/common/evo-calendar/evo-starter.js","webpack://crystal-lake-frontend/./src/js/common/redirect.js"],"sourcesContent":["/*!\n * Evo Calendar - Simple and Modern-looking Event Calendar Plugin\n *\n * Licensed under the MIT License\n * \n * Version: 1.1.3\n * Author: Edlyn Villegas\n * Docs: https://edlynvillegas.github.com/evo-calendar\n * Repo: https://github.com/edlynvillegas/evo-calendar\n * Issues: https://github.com/edlynvillegas/evo-calendar/issues\n * \n */\n\n;(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var EvoCalendar = window.EvoCalendar || {};\n    \n    EvoCalendar = (function() {\n        var instanceUid = 0;\n        function EvoCalendar(element, settings) {\n            var _ = this;\n            _.defaults = {\n                theme: null,\n                format: 'mm/dd/yyyy',\n                titleFormat: 'MM yyyy',\n                eventHeaderFormat: 'MM d, yyyy',\n                firstDayOfWeek: 0,\n                language: 'en',\n                todayHighlight: false,\n                sidebarDisplayDefault: true,\n                sidebarToggler: true,\n                eventDisplayDefault: true,\n                eventListToggler: true,\n                calendarEvents: null\n            };\n            _.options = $.extend({}, _.defaults, settings);\n\n            _.initials = {\n                default_class: $(element)[0].classList.value,\n                validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,\n                dates: {\n                    en: {\n                        days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n                        daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n                        daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n                        months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n                        monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n                        noEventForToday: \"No event for today.. so take a rest! :)\",\n                        noEventForThisDay: \"No event for this day.. so take a rest! :)\",\n                        previousYearText: \"Previous year\",\n                        nextYearText: \"Next year\",\n                        closeSidebarText: \"Close sidebar\",\n                        closeEventListText: \"Close event list\"\n                    },\n                    ru: {\n                        days: [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четвернг\", \"Пятница\", \"Суббота\"],\n                        daysShort: [\"ВС\", \"ПН\", \"ВТ\", \"СР\", \"ЧТ\", \"ПТ\", \"СБ\"],\n                        daysMin: [\"ВС\", \"ПН\", \"ВТ\", \"СР\", \"ЧТ\", \"ПТ\", \"СБ\"],\n                        months: [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрт\", \"Ноябрь\", \"Декабрь\"],\n                        monthsShort: [\"Янв\", \"Фев\", \"Март\", \"Апр\", \"Май\", \"Июнь\", \"Июль\", \"Авг\", \"Сент\", \"Окт\", \"Нояб\", \"Дек\"],\n                        noEventForToday: \"На эту дату ничего нет\",\n                        noEventForThisDay: \"На эту дату ничего нет\",\n                        previousYearText: \"Предыдущий год\",\n                        nextYearText: \"Следующий год\",\n                        closeSidebarText: \"Закрыть месяца\",\n                        closeEventListText: \"Закрть время\"\n                    },\n                    es: {\n                        days: [\"Domingo\", \"Lunes\", \"Martes\", \"Miércoles\", \"Jueves\", \"Viernes\", \"Sábado\"],\n                        daysShort: [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"],\n                        daysMin: [\"Do\", \"Lu\", \"Ma\", \"Mi\", \"Ju\", \"Vi\", \"Sa\"],\n                        months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n                        monthsShort: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n                        noEventForToday: \"No hay evento para hoy.. ¡así que descanse! :)\",\n                        noEventForThisDay: \"Ningún evento para este día.. ¡así que descanse! :)\",\n                        previousYearText: \"Año anterior\",\n                        nextYearText: \"El próximo año\",\n                        closeSidebarText: \"Cerrar la barra lateral\",\n                        closeEventListText: \"Cerrar la lista de eventos\"\n                    },\n                    de: {\n                        days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n                        daysShort: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n                        daysMin: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n                        months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n                        monthsShort: [\"Jan\", \"Feb\", \"Mär\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"],\n                        noEventForToday: \"Keine Veranstaltung für heute.. also ruhen Sie sich aus! :)\",\n                        noEventForThisDay: \"Keine Veranstaltung für diesen Tag.. also ruhen Sie sich aus! :)\",\n                        previousYearText: \"Vorheriges Jahr\",\n                        nextYearText: \"Nächstes Jahr\",\n                        closeSidebarText: \"Schließen Sie die Seitenleiste\",\n                        closeEventListText: \"Schließen Sie die Ereignisliste\"\n                    },\n                    pt: {\n                        days: [\"Domingo\", \"Segunda-Feira\", \"Terça-Feira\", \"Quarta-Feira\", \"Quinta-Feira\", \"Sexta-Feira\", \"Sábado\"],\n                        daysShort: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n                        daysMin: [\"Do\", \"2a\", \"3a\", \"4a\", \"5a\", \"6a\", \"Sa\"],\n                        months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n                        monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n                        noEventForToday: \"Nenhum evento para hoje.. então descanse! :)\",\n                        noEventForThisDay: \"Nenhum evento para este dia.. então descanse! :)\",\n                        previousYearText: \"Ano anterior\",\n                        nextYearText: \"Próximo ano\",\n                        closeSidebarText: \"Feche a barra lateral\",\n                        closeEventListText: \"Feche a lista de eventos\"\n                    },\n                    fr: {\n                        days: [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n                        daysShort: [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n                        daysMin: [\"Di\", \"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\"],\n                        months: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n                        monthsShort: [\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Juin\", \"Juil\", \"Août\", \"Sept\", \"Oct\", \"Nov\", \"Déc\"],\n                        noEventForToday: \"Rien pour aujourd'hui... Belle journée :)\",\n                        noEventForThisDay: \"Rien pour ce jour-ci... Profite de te réposer :)\",\n                        previousYearText: \"Année précédente\",\n                        nextYearText: \"L'année prochaine\",\n                        closeSidebarText: \"Fermez la barre latérale\",\n                        closeEventListText: \"Fermer la liste des événements\"\n                    },\n                    nl: {\n                        days: [\"Zondag\", \"Maandag\", \"Dinsdag\", \"Woensdag\", \"Donderdag\", \"Vrijdag\", \"Zaterdag\"],\n                        daysShort: [\"Zon\", \"Maan\", \"Din\", \"Woe\", \"Don\", \"Vrij\", \"Zat\"],\n                        daysMin: [\"Zo\", \"Ma\", \"Di\", \"Wo\", \"Do\", \"Vr\", \"Za\"],\n                        months: [\"Januari\", \"Februari\", \"Maart\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Augustus\", \"September\", \"Oktober\", \"November\", \"December\"],\n                        monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mei\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"],\n                        noEventForToday: \"Geen event voor vandaag.. dus rust even uit! :)\",\n                        noEventForThisDay: \"Geen event voor deze dag.. dus rust even uit! :)\",\n                        previousYearText: \"Vorig jaar\",\n                        nextYearText: \"Volgend jaar\",\n                        closeSidebarText: \"Sluit de zijbalk\",\n                        closeEventListText: \"Sluit de event lijst\"\n                    }\n                }\n            }\n            _.initials.weekends = {\n                sun: _.initials.dates[_.options.language].daysShort[0],\n                sat: _.initials.dates[_.options.language].daysShort[6]\n            }\n\n\n            // Format Calendar Events into selected format\n            if(_.options.calendarEvents != null) {\n                for(var i=0; i < _.options.calendarEvents.length; i++) {\n                    // If event doesn't have an id, throw an error message\n                    if(!_.options.calendarEvents[i].id) {\n                        console.log(\"%c Event named: \\\"\"+_.options.calendarEvents[i].name+\"\\\" doesn't have a unique ID \", \"color:white;font-weight:bold;background-color:#e21d1d;\");\n                    }\n                    if(_.isValidDate(_.options.calendarEvents[i].date)) {\n                        _.options.calendarEvents[i].date = _.formatDate(_.options.calendarEvents[i].date, _.options.format)\n                    }\n                }\n            }\n\n            // Global variables\n            _.startingDay = null;\n            _.monthLength = null;\n            _.windowW = $(window).width();\n            \n            // CURRENT\n            _.$current = {\n                month: (isNaN(this.month) || this.month == null) ? new Date().getMonth() : this.month,\n                year: (isNaN(this.year) || this.year == null) ? new Date().getFullYear() : this.year,\n                date: _.formatDate(_.initials.dates[_.defaults.language].months[new Date().getMonth()]+' '+new Date().getDate()+' '+ new Date().getFullYear(), _.options.format)\n            }\n\n            // ACTIVE\n            _.$active = {\n                month: _.$current.month,\n                year: _.$current.year,\n                date: _.$current.date,\n                event_date: _.$current.date,\n                events: []\n            }\n\n            // LABELS\n            _.$label = {\n                days: [],\n                months: _.initials.dates[_.defaults.language].months,\n                days_in_month: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n            }\n\n            // HTML Markups (template)\n            _.$markups = {\n                calendarHTML: '',\n                mainHTML: '',\n                sidebarHTML: '',\n                eventHTML: ''\n            }\n            // HTML DOM elements\n            _.$elements = {\n                calendarEl: $(element),\n                innerEl: null,\n                sidebarEl: null,\n                eventEl: null,\n\n                sidebarToggler: null,\n                eventListToggler: null,\n\n                activeDayEl: null,\n                activeMonthEl: null,\n                activeYearEl: null\n            }\n            _.$breakpoints = {\n                tablet: 768,\n                mobile: 425\n            }\n            _.$UI = {\n                hasSidebar: true,\n                hasEvent: true\n            }\n\n            _.formatDate = $.proxy(_.formatDate, _);\n            _.selectDate = $.proxy(_.selectDate, _);\n            _.selectMonth = $.proxy(_.selectMonth, _);\n            _.selectYear = $.proxy(_.selectYear, _);\n            _.selectEvent = $.proxy(_.selectEvent, _);\n            _.toggleSidebar = $.proxy(_.toggleSidebar, _);\n            _.toggleEventList = $.proxy(_.toggleEventList, _);\n            \n            _.instanceUid = instanceUid++;\n\n            _.init(true);\n        }\n\n        return EvoCalendar;\n\n    }());\n\n    // v1.0.0 - Initialize plugin\n    EvoCalendar.prototype.init = function(init) {\n        var _ = this;\n        \n        if (!$(_.$elements.calendarEl).hasClass('calendar-initialized')) {\n            $(_.$elements.calendarEl).addClass('evo-calendar calendar-initialized');\n            if (_.windowW <= _.$breakpoints.tablet) { // tablet/mobile\n                _.toggleSidebar(false);\n                _.toggleEventList(false);\n            } else {\n                if (!_.options.sidebarDisplayDefault) _.toggleSidebar(false);\n                else _.toggleSidebar(true);\n\n                if (!_.options.eventDisplayDefault) _.toggleEventList(false);\n                else _.toggleEventList(true);\n            }\n            if (_.options.theme) _.setTheme(_.options.theme); // set calendar theme\n            _.buildTheBones(); // start building the calendar components\n        }\n    };\n    // v1.0.0 - Destroy plugin\n    EvoCalendar.prototype.destroy = function() {\n        var _ = this;\n        // code here\n        _.destroyEventListener();\n        if (_.$elements.calendarEl) {\n            _.$elements.calendarEl.removeClass('calendar-initialized');\n            _.$elements.calendarEl.removeClass('evo-calendar');\n            _.$elements.calendarEl.removeClass('sidebar-hide');\n            _.$elements.calendarEl.removeClass('event-hide');\n        }\n        _.$elements.calendarEl.empty();\n        _.$elements.calendarEl.attr('class', _.initials.default_class);\n        $(_.$elements.calendarEl).trigger(\"destroy\", [_])\n    }\n\n    // v1.0.0 - Limit title (...)\n    EvoCalendar.prototype.limitTitle = function(title, limit) {\n        var newTitle = [];\n        limit = limit === undefined ? 18 : limit;\n        if ((title).split(' ').join('').length > limit) {\n            var t = title.split(' ');\n            for (var i=0; i<t.length; i++) {\n                if (t[i].length + newTitle.join('').length <= limit) {\n                    newTitle.push(t[i])\n                }\n            }\n            return newTitle.join(' ') + '...'\n        }\n        return title;\n    }\n\n    // v1.1.2 - Check and filter strings\n    EvoCalendar.prototype.stringCheck = function(d) {\n        return d.replace(/[^\\w]/g, '\\\\$&');\n    }\n            \n    // v1.0.0 - Parse format (date)\n    EvoCalendar.prototype.parseFormat = function(format) {\n        var _ = this;\n        if (typeof format.toValue === 'function' && typeof format.toDisplay === 'function')\n            return format;\n        // IE treats \\0 as a string end in inputs (truncating the value),\n        // so it's a bad format delimiter, anyway\n        var separators = format.replace(_.initials.validParts, '\\0').split('\\0'),\n            parts = format.match(_.initials.validParts);\n        if (!separators || !separators.length || !parts || parts.length === 0){\n            console.log(\"%c Invalid date format \", \"color:white;font-weight:bold;background-color:#e21d1d;\");\n        }\n        return {separators: separators, parts: parts};\n    };\n    \n    // v1.0.0 - Format date\n    EvoCalendar.prototype.formatDate = function(date, format, language) {\n        var _ = this;\n        if (!date)\n            return '';\n        language = language ? language : _.defaults.language\n        if (typeof format === 'string')\n            format = _.parseFormat(format);\n        if (format.toDisplay)\n            return format.toDisplay(date, format, language);\n\n        var ndate = new Date(date);\n        // if (!_.isValidDate(ndate)) { // test\n        //     ndate = new Date(date.replace(/-/g, '/'))\n        // }\n        \n        var val = {\n            d: ndate.getDate(),\n            D: _.initials.dates[language].daysShort[ndate.getDay()],\n            DD: _.initials.dates[language].days[ndate.getDay()],\n            m: ndate.getMonth() + 1,\n            M: _.initials.dates[language].monthsShort[ndate.getMonth()],\n            MM: _.initials.dates[language].months[ndate.getMonth()],\n            yy: ndate.getFullYear().toString().substring(2),\n            yyyy: ndate.getFullYear()\n        };\n        \n        val.dd = (val.d < 10 ? '0' : '') + val.d;\n        val.mm = (val.m < 10 ? '0' : '') + val.m;\n        date = [];\n        var seps = $.extend([], format.separators);\n        for (var i=0, cnt = format.parts.length; i <= cnt; i++){\n            if (seps.length)\n                date.push(seps.shift());\n            date.push(val[format.parts[i]]);\n        }\n        return date.join('');\n    };\n\n    // v1.0.0 - Get dates between two dates\n    EvoCalendar.prototype.getBetweenDates = function(dates) {\n        var _ = this, betweenDates = [];\n        for (var x = 0; x < _.monthLength; x++) {\n            var active_date = _.formatDate(_.$label.months[_.$active.month] +' '+ (x + 1) +' '+ _.$active.year, _.options.format);\n            if (_.isBetweenDates(active_date, dates)) {\n                betweenDates.push(active_date);\n            }\n        }\n        return betweenDates;\n    };\n\n    // v1.0.0 - Check if date is between the passed calendar date \n    EvoCalendar.prototype.isBetweenDates = function(active_date, dates) {\n        var sd, ed;\n        if (dates instanceof Array) {\n            sd = new Date(dates[0]);\n            ed = new Date(dates[1]);\n        } else {\n            sd = new Date(dates);\n            ed = new Date(dates);\n        }\n        if (sd <= new Date(active_date) && ed >= new Date(active_date)) {\n            return true;\n        }\n        return false;\n    }\n    \n    // v1.0.0 - Check if event has the same event type in the same date\n    EvoCalendar.prototype.hasSameDayEventType = function(date, type) {\n        var _ = this, eventLength = 0;\n\n        for (var i = 0; i < _.options.calendarEvents.length; i++) {\n            if (_.options.calendarEvents[i].date instanceof Array) {\n                var arr = _.getBetweenDates(_.options.calendarEvents[i].date);\n                for (var x = 0; x < arr.length; x++) {\n                    if(date === arr[x] && type === _.options.calendarEvents[i].type) {\n                        eventLength++;\n                    }\n                }\n            } else {\n                if(date === _.options.calendarEvents[i].date && type === _.options.calendarEvents[i].type) {\n                    eventLength++;\n                }\n            }\n        }\n\n        if (eventLength > 0) {\n            return true;\n        }\n        return false;\n    }\n    \n    // v1.0.0 - Set calendar theme\n    EvoCalendar.prototype.setTheme = function(themeName) {\n        var _ = this;\n        var prevTheme = _.options.theme;\n        _.options.theme = themeName.toLowerCase().split(' ').join('-');\n\n        if (_.options.theme) $(_.$elements.calendarEl).removeClass(prevTheme);\n        if (_.options.theme !== 'default') $(_.$elements.calendarEl).addClass(_.options.theme);\n    }\n\n    // v1.0.0 - Called in every resize\n    EvoCalendar.prototype.resize = function() {\n        var _ = this;\n        _.windowW = $(window).width();\n\n        if (_.windowW <= _.$breakpoints.tablet) { // tablet\n            _.toggleSidebar(false);\n            _.toggleEventList(false);\n\n            if (_.windowW <= _.$breakpoints.mobile) { // mobile\n                $(window)\n                    .off('click.evocalendar.evo-' + _.instanceUid)\n            } else {\n                $(window)\n                    .on('click.evocalendar.evo-' + _.instanceUid, $.proxy(_.toggleOutside, _));\n            }\n        } else {\n            if (!_.options.sidebarDisplayDefault) _.toggleSidebar(false);\n            else _.toggleSidebar(true);\n\n            if (!_.options.eventDisplayDefault) _.toggleEventList(false);\n            else _.toggleEventList(true);\n            \n            $(window)\n                .off('click.evocalendar.evo-' + _.instanceUid);\n        }\n    }\n\n    // v1.0.0 - Initialize event listeners\n    EvoCalendar.prototype.initEventListener = function() {\n        var _ = this;\n\n        // resize\n        $(window)\n            .off('resize.evocalendar.evo-' + _.instanceUid)\n            .on('resize.evocalendar.evo-' + _.instanceUid, $.proxy(_.resize, _));\n\n        // IF sidebarToggler: set event listener: toggleSidebar\n        if(_.options.sidebarToggler) {\n            _.$elements.sidebarToggler\n            .off('click.evocalendar')\n            .on('click.evocalendar', _.toggleSidebar);\n        }\n        \n        // IF eventListToggler: set event listener: toggleEventList\n        if(_.options.eventListToggler) {\n            _.$elements.eventListToggler\n            .off('click.evocalendar')\n            .on('click.evocalendar', _.toggleEventList);\n        }\n\n        // set event listener for each month\n        _.$elements.sidebarEl.find('[data-month-val]')\n        .off('click.evocalendar')\n        .on('click.evocalendar', _.selectMonth);\n\n        // set event listener for year\n        _.$elements.sidebarEl.find('[data-year-val]')\n        .off('click.evocalendar')\n        .on('click.evocalendar', _.selectYear);\n\n        // set event listener for every event listed\n        _.$elements.eventEl.find('[data-event-index]')\n        .off('click.evocalendar')\n        .on('click.evocalendar', _.selectEvent);\n    };\n    \n    // v1.0.0 - Destroy event listeners\n    EvoCalendar.prototype.destroyEventListener = function() {\n        var _ = this;\n        \n        $(window).off('resize.evocalendar.evo-' + _.instanceUid);\n        $(window).off('click.evocalendar.evo-' + _.instanceUid);\n        \n        // IF sidebarToggler: remove event listener: toggleSidebar\n        if(_.options.sidebarToggler) {\n            _.$elements.sidebarToggler\n            .off('click.evocalendar');\n        }\n        \n        // IF eventListToggler: remove event listener: toggleEventList\n        if(_.options.eventListToggler) {\n            _.$elements.eventListToggler\n            .off('click.evocalendar');\n        }\n\n        // remove event listener for each day\n        _.$elements.innerEl.find('.calendar-day').children()\n        .off('click.evocalendar')\n\n        // remove event listener for each month\n        _.$elements.sidebarEl.find('[data-month-val]')\n        .off('click.evocalendar');\n\n        // remove event listener for year\n        _.$elements.sidebarEl.find('[data-year-val]')\n        .off('click.evocalendar');\n\n        // remove event listener for every event listed\n        _.$elements.eventEl.find('[data-event-index]')\n        .off('click.evocalendar');\n    };\n    \n    // v1.0.0 - Calculate days (incl. monthLength, startingDays based on :firstDayOfWeekName)\n    EvoCalendar.prototype.calculateDays = function() {\n        var _ = this, nameDays, weekStart, firstDay;\n        _.monthLength = _.$label.days_in_month[_.$active.month]; // find number of days in month\n        if (_.$active.month == 1) { // compensate for leap year - february only!\n            if((_.$active.year % 4 == 0 && _.$active.year % 100 != 0) || _.$active.year % 400 == 0){\n                _.monthLength = 29;\n            }\n        }\n        nameDays = _.initials.dates[_.options.language].daysShort;\n        weekStart = _.options.firstDayOfWeek;\n        \n        while (_.$label.days.length < nameDays.length) {\n            if (weekStart == nameDays.length) {\n                weekStart=0;\n            }\n            _.$label.days.push(nameDays[weekStart]);\n            weekStart++;\n        }\n        firstDay = new Date(_.$active.year, _.$active.month).getDay() - weekStart;\n        _.startingDay = firstDay < 0 ? (_.$label.days.length + firstDay) : firstDay;\n    }\n\n    // v1.0.0 - Build the bones! (incl. sidebar, inner, events), called once in every initialization\n    EvoCalendar.prototype.buildTheBones = function() {\n        var _ = this;\n        _.calculateDays();\n        \n        if (!_.$elements.calendarEl.html()) {\n            var markup;\n\n            // --- BUILDING MARKUP BEGINS --- //\n\n            // sidebar\n            markup = '<div class=\"calendar-sidebar\">'+\n                        '<div class=\"calendar-year\">'+\n                        '<button class=\"icon-button\" role=\"button\" data-year-val=\"prev\" title=\"'+_.initials.dates[_.options.language].previousYearText+'\">'+\n                                '<span class=\"chevron-arrow-left\"></span>'+\n                            '</button>'+\n                            '&nbsp;<p></p>&nbsp;'+\n                            '<button class=\"icon-button\" role=\"button\" data-year-val=\"next\" title=\"'+_.initials.dates[_.options.language].nextYearText+'\">'+\n                                '<span class=\"chevron-arrow-right\"></span>'+\n                            '</button>'+\n                        '</div><div class=\"month-list\">'+\n                        '<ul class=\"calendar-months\">';\n                            for(var i = 0; i < _.$label.months.length; i++) {\n                                markup += '<li class=\"month\" role=\"button\" data-month-val=\"'+i+'\">'+_.initials.dates[_.options.language].months[i]+'</li>';\n                            }\n                        markup += '</ul>';\n            markup += '</div></div>';\n        \n            // inner\n            markup += '<div class=\"calendar-inner\">'+\n                            '<table class=\"calendar-table\">'+\n                                '<tr><th colspan=\"7\"></th></tr>'+\n                                '<tr class=\"calendar-header\">';\n                                for(var i = 0; i < _.$label.days.length; i++ ){\n                                    var headerClass = \"calendar-header-day\";\n                                    if (_.$label.days[i] === _.initials.weekends.sat || _.$label.days[i] === _.initials.weekends.sun) {\n                                        headerClass += ' --weekend';\n                                    }\n                                    markup += '<td class=\"'+headerClass+'\">'+_.$label.days[i]+'</td>';\n                                }\n                                markup += '</tr></table>'+\n                        '</div>';\n\n            // events\n            markup += '<div class=\"calendar-events\">'+\n                            '<div class=\"event-header\"><p></p></div>'+\n                            '<div class=\"event-list\"></div>'+\n                        '</div>';\n\n            // --- Finally, build it now! --- //\n            _.$elements.calendarEl.html(markup);\n\n            if (!_.$elements.sidebarEl) _.$elements.sidebarEl = $(_.$elements.calendarEl).find('.calendar-sidebar');\n            if (!_.$elements.innerEl) _.$elements.innerEl = $(_.$elements.calendarEl).find('.calendar-inner');\n            if (!_.$elements.eventEl) _.$elements.eventEl = $(_.$elements.calendarEl).find('.calendar-events');\n\n            // if: _.options.sidebarToggler\n            if(_.options.sidebarToggler) {\n                $(_.$elements.sidebarEl).append('<span id=\"sidebarToggler\" role=\"button\" aria-pressed title=\"'+_.initials.dates[_.options.language].closeSidebarText+'\"><button class=\"icon-button\"><span class=\"bars\"></span></button></span>');\n                if(!_.$elements.sidebarToggler) _.$elements.sidebarToggler = $(_.$elements.sidebarEl).find('span#sidebarToggler');\n            }\n            if(_.options.eventListToggler) {\n                $(_.$elements.calendarEl).append('<span id=\"eventListToggler\" role=\"button\" aria-pressed title=\"'+_.initials.dates[_.options.language].closeEventListText+'\"><button class=\"icon-button\"><span class=\"chevron-arrow-right\"></span></button></span>');\n                if(!_.$elements.eventListToggler) _.$elements.eventListToggler = $(_.$elements.calendarEl).find('span#eventListToggler');\n            }\n        }\n\n        _.buildSidebarYear();\n        _.buildSidebarMonths();\n        _.buildCalendar();\n        _.buildEventList();\n        _.initEventListener(); // test\n\n        _.resize();\n    }\n\n    // v1.0.0 - Build Event: Event list\n    EvoCalendar.prototype.buildEventList = function() {\n        var _ = this, markup, hasEventToday = false;\n        \n        _.$active.events = [];\n        // Event date\n        var title = _.formatDate(_.$active.date, _.options.eventHeaderFormat, _.options.language);\n        _.$elements.eventEl.find('.event-header > p').text(title);\n        // Event list\n        var eventListEl = _.$elements.eventEl.find('.event-list');\n        // Clear event list item(s)\n        if (eventListEl.children().length > 0) eventListEl.empty();\n        if (_.options.calendarEvents) {\n            for (var i = 0; i < _.options.calendarEvents.length; i++) {\n                if(_.isBetweenDates(_.$active.date, _.options.calendarEvents[i].date)) {\n                    eventAdder(_.options.calendarEvents[i])\n                }\n                else if (_.options.calendarEvents[i].everyYear) {\n                    var d = new Date(_.$active.date).getMonth() + 1 + ' ' + new Date(_.$active.date).getDate();\n                    var dd = new Date(_.options.calendarEvents[i].date).getMonth() + 1 + ' ' + new Date(_.options.calendarEvents[i].date).getDate();\n                    // var dates = [_.formatDate(_.options.calendarEvents[i].date[0], 'mm/dd'), _.formatDate(_.options.calendarEvents[i].date[1], 'mm/dd')];\n\n                    if(d==dd) {\n                        eventAdder(_.options.calendarEvents[i])\n                    }\n                }\n            };\n        }\n        function eventAdder(event) {\n            hasEventToday = true;\n            _.addEventList(event)\n        }\n        // IF: no event for the selected date\n        if(!hasEventToday) {\n            markup = '<div class=\"event-empty\">';\n            if (_.$active.date === _.$current.date) {\n                markup += '<p>'+_.initials.dates[_.options.language].noEventForToday+'</p>';\n            } else {\n                markup += '<p>'+_.initials.dates[_.options.language].noEventForThisDay+'</p>';\n            }\n            markup += '</div>';\n        }\n        eventListEl.append(markup)\n    }\n\n    // v1.0.0 - Add single event to event list\n    EvoCalendar.prototype.addEventList = function(event_data) {\n        var _ = this, markup;\n        var eventListEl = _.$elements.eventEl.find('.event-list');\n        if (eventListEl.find('[data-event-index]').length === 0) eventListEl.empty();\n        _.$active.events.push(event_data);\n        markup = '<div class=\"event-container\" role=\"button\" data-event-index=\"'+(event_data.id)+'\">';\n        markup += '<div class=\"event-icon\"><div class=\"event-bullet-'+event_data.type+'\"';\n        if (event_data.color) {\n            markup += 'style=\"background-color:'+event_data.color+'\"'\n        }\n        markup += '></div></div><div class=\"event-info\"><p class=\"event-title\">'+_.limitTitle(event_data.name);\n        if (event_data.badge) markup += '<span>'+event_data.badge+'</span>';\n        markup += '</p>'\n        if (event_data.description) markup += '<p class=\"event-desc\">'+event_data.description+'</p>';\n        markup += '</div>';\n        markup += '</div>';\n        eventListEl.append(markup);\n\n        _.$elements.eventEl.find('[data-event-index=\"'+(event_data.id)+'\"]')\n        .off('click.evocalendar')\n        .on('click.evocalendar', _.selectEvent);\n    }\n    // v1.0.0 - Remove single event to event list\n    EvoCalendar.prototype.removeEventList = function(event_data) {\n        var _ = this, markup;\n        var eventListEl = _.$elements.eventEl.find('.event-list');\n        if (eventListEl.find('[data-event-index=\"'+event_data+'\"]').length === 0) return; // event not in active events\n        eventListEl.find('[data-event-index=\"'+event_data+'\"]').remove();\n        if (eventListEl.find('[data-event-index]').length === 0) {\n            eventListEl.empty();\n            if (_.$active.date === _.$current.date) {\n                markup += '<p>'+_.initials.dates[_.options.language].noEventForToday+'</p>';\n            } else {\n                markup += '<p>'+_.initials.dates[_.options.language].noEventForThisDay+'</p>';\n            }\n            eventListEl.append(markup)\n        }\n    }\n    \n    // v1.0.0 - Build Sidebar: Year text\n    EvoCalendar.prototype.buildSidebarYear = function() {\n        var _ = this;\n        \n        _.$elements.sidebarEl.find('.calendar-year > p').text(_.$active.year);\n    }\n\n    // v1.0.0 - Build Sidebar: Months list text\n    EvoCalendar.prototype.buildSidebarMonths = function() {\n        var _ = this;\n        \n        _.$elements.sidebarEl.find('.calendar-months > [data-month-val]').removeClass('active-month');\n        _.$elements.sidebarEl.find('.calendar-months > [data-month-val=\"'+_.$active.month+'\"]').addClass('active-month');\n    }\n\n    // v1.0.0 - Build Calendar: Title, Days\n    EvoCalendar.prototype.buildCalendar = function() {\n        var _ = this, markup, title;\n        \n        _.calculateDays();\n\n        title = _.formatDate(new Date(_.$label.months[_.$active.month] +' 1 '+ _.$active.year), _.options.titleFormat, _.options.language);\n        _.$elements.innerEl.find('.calendar-table th').text(title);\n\n        _.$elements.innerEl.find('.calendar-body').remove(); // Clear days\n        \n        markup += '<tr class=\"calendar-body\">';\n                    var day = 1;\n                    for (var i = 0; i < 9; i++) { // this loop is for is weeks (rows)\n                        for (var j = 0; j < _.$label.days.length; j++) { // this loop is for weekdays (cells)\n                            if (day <= _.monthLength && (i > 0 || j >= _.startingDay)) {\n                                var dayClass = \"calendar-day\";\n                                if (_.$label.days[j] === _.initials.weekends.sat || _.$label.days[j] === _.initials.weekends.sun) {\n                                    dayClass += ' --weekend'; // add '--weekend' to sat sun\n                                }\n                                markup += '<td class=\"'+dayClass+'\">';\n\n                                var thisDay = _.formatDate(_.$label.months[_.$active.month]+' '+day+' '+_.$active.year, _.options.format);\n                                markup += '<div class=\"day\" role=\"button\" data-date-val=\"'+thisDay+'\">'+day+'</div>';\n                                day++;\n                            } else {\n                                markup += '<td>';\n                            }\n                            markup += '</td>';\n                        }\n                        if (day > _.monthLength) {\n                            break; // stop making rows if we've run out of days\n                        } else {\n                            markup += '</tr><tr class=\"calendar-body\">'; // add if not\n                        }\n                    }\n                    markup += '</tr>';\n        _.$elements.innerEl.find('.calendar-table').append(markup);\n\n        if(_.options.todayHighlight) {\n            _.$elements.innerEl.find(\"[data-date-val='\" + _.$current.date + \"']\").addClass('calendar-today');\n        }\n        \n        // set event listener for each day\n        _.$elements.innerEl.find('.calendar-day').children()\n        .off('click.evocalendar')\n        .on('click.evocalendar', _.selectDate)\n\n        var selectedDate = _.$elements.innerEl.find(\"[data-date-val='\" + _.$active.date + \"']\");\n        \n        if (selectedDate) {\n            // Remove active class to all\n            _.$elements.innerEl.children().removeClass('calendar-active');\n            // Add active class to selected date\n            selectedDate.addClass('calendar-active');\n        }\n        if(_.options.calendarEvents != null) { // For event indicator (dots)\n            _.buildEventIndicator();\n        }\n    };\n\n    // v1.0.0 - Add event indicator/s (dots)\n    EvoCalendar.prototype.addEventIndicator = function(event) {\n        var _ = this, htmlToAppend, thisDate;\n        var event_date = event.date;\n        var type = _.stringCheck(event.type);\n        \n        if (event_date instanceof Array) {\n            if (event.everyYear) {\n                for (var x=0; x<event_date.length; x++) {\n                    event_date[x] = _.formatDate(new Date(event_date[x]).setFullYear(_.$active.year), _.options.format);\n                }\n            }\n            var active_date = _.getBetweenDates(event_date);\n            \n            for (var i=0; i<active_date.length; i++) {\n                appendDot(active_date[i]);\n            }\n        } else {\n            if (event.everyYear) {\n                event_date = _.formatDate(new Date(event_date).setFullYear(_.$active.year), _.options.format);\n            }\n            appendDot(event_date);\n        }\n\n        function appendDot(date) {\n            thisDate = _.$elements.innerEl.find('[data-date-val=\"'+date+'\"]');\n\n            if (thisDate.find('span.event-indicator').length === 0) {\n                thisDate.append('<span class=\"event-indicator\"></span>');\n            }\n            \n            if (thisDate.find('span.event-indicator > .type-bullet > .type-'+type).length === 0) {\n                htmlToAppend = '<div class=\"type-bullet\"><div ';\n                \n                htmlToAppend += 'class=\"type-'+event.type+'\"'\n                if (event.color) { htmlToAppend += 'style=\"background-color:'+event.color+'\"' }\n                htmlToAppend += '></div></div>';\n                thisDate.find('.event-indicator').append(htmlToAppend);\n            }\n        }      \n    };\n    \n    // v1.0.0 - Remove event indicator/s (dots)\n    EvoCalendar.prototype.removeEventIndicator = function(event) {\n        var _ = this;\n        var event_date = event.date;\n        var type = _.stringCheck(event.type);\n\n        if (event_date instanceof Array) {\n            var active_date = _.getBetweenDates(event_date);\n            \n            for (var i=0; i<active_date.length; i++) {\n                removeDot(active_date[i]);\n            }\n        } else {\n            removeDot(event_date);\n        }\n\n        function removeDot(date) {\n            // Check if no '.event-indicator', 'cause nothing to remove\n            if (_.$elements.innerEl.find('[data-date-val=\"'+date+'\"] span.event-indicator').length === 0) {\n                return;\n            }\n\n            // // If has no type of event, then delete \n            if (!_.hasSameDayEventType(date, type)) {\n                _.$elements.innerEl.find('[data-date-val=\"'+date+'\"] span.event-indicator > .type-bullet > .type-'+type).parent().remove();\n            }\n        }\n    };\n    \n    /****************\n    *    METHODS    *\n    ****************/\n\n    // v1.0.0 - Build event indicator on each date\n    EvoCalendar.prototype.buildEventIndicator = function() {\n        var _ = this;\n        \n        // prevent duplication\n        _.$elements.innerEl.find('.calendar-day > day > .event-indicator').empty();\n        \n        for (var i = 0; i < _.options.calendarEvents.length; i++) {\n            _.addEventIndicator(_.options.calendarEvents[i]);\n        }\n    };\n\n    // v1.0.0 - Select event\n    EvoCalendar.prototype.selectEvent = function(event) {\n        var _ = this;\n        var el = $(event.target).closest('.event-container');\n        var id = $(el).data('eventIndex').toString();\n        var index = _.options.calendarEvents.map(function (event) { return (event.id).toString() }).indexOf(id);\n        var modified_event = _.options.calendarEvents[index];\n        if (modified_event.date instanceof Array) {\n            modified_event.dates_range = _.getBetweenDates(modified_event.date);\n        }\n        $(_.$elements.calendarEl).trigger(\"selectEvent\", [_.options.calendarEvents[index]])\n    }\n\n    // v1.0.0 - Select year\n    EvoCalendar.prototype.selectYear = function(event) {\n        var _ = this;\n        var el, yearVal;\n\n        if (typeof event === 'string' || typeof event === 'number') {\n            if ((parseInt(event)).toString().length === 4) {\n                yearVal = parseInt(event);\n            }\n        } else {\n            el = $(event.target).closest('[data-year-val]');\n            yearVal = $(el).data('yearVal');\n        }\n\n        if(yearVal == \"prev\") {\n            --_.$active.year;\n        } else if (yearVal == \"next\") {\n            ++_.$active.year;\n        } else if (typeof yearVal === 'number') {\n            _.$active.year = yearVal;\n        }\n        \n        if (_.windowW <= _.$breakpoints.mobile) {\n            if(_.$UI.hasSidebar) _.toggleSidebar(false);\n        }\n        \n        $(_.$elements.calendarEl).trigger(\"selectYear\", [_.$active.year])\n\n        _.buildSidebarYear();\n        _.buildCalendar();\n    };\n\n    // v1.0.0 - Select month\n    EvoCalendar.prototype.selectMonth = function(event) {\n        var _ = this;\n        \n        if (typeof event === 'string' || typeof event === 'number') {\n            if (event >= 0 && event <=_.$label.months.length) {\n                // if: 0-11\n                _.$active.month = (event).toString();\n            }\n        } else {\n            // if month is manually selected\n            _.$active.month = $(event.currentTarget).data('monthVal');\n        }\n        \n        _.buildSidebarMonths();\n        _.buildCalendar();\n        \n        if (_.windowW <= _.$breakpoints.tablet) {\n            if(_.$UI.hasSidebar) _.toggleSidebar(false);\n        }\n\n        // EVENT FIRED: selectMonth\n        $(_.$elements.calendarEl).trigger(\"selectMonth\", [_.initials.dates[_.options.language].months[_.$active.month], _.$active.month])\n    };\n\n    // v1.0.0 - Select specific date\n    EvoCalendar.prototype.selectDate = function(event) {\n        var _ = this;\n        var oldDate = _.$active.date;\n        var date, year, month, activeDayEl, isSameDate;\n\n        if (typeof event === 'string' || typeof event === 'number' || event instanceof Date) {\n            date = _.formatDate(new Date(event), _.options.format)\n            year = new Date(date).getFullYear();\n            month = new Date(date).getMonth();\n            \n            if (_.$active.year !== year) _.selectYear(year);\n            if (_.$active.month !== month) _.selectMonth(month);\n            activeDayEl = _.$elements.innerEl.find(\"[data-date-val='\" + date + \"']\");\n        } else {\n            activeDayEl = $(event.currentTarget);\n            date = activeDayEl.data('dateVal')\n        }\n        isSameDate = _.$active.date === date;\n        // Set new active date\n        _.$active.date = date;\n        _.$active.event_date = date;\n        // Remove active class to all\n        _.$elements.innerEl.find('[data-date-val]').removeClass('calendar-active');\n        // Add active class to selected date\n        activeDayEl.addClass('calendar-active');\n        // Build event list if not the same date events built\n        if (!isSameDate) _.buildEventList();\n\n        // EVENT FIRED: selectDate\n        $(_.$elements.calendarEl).trigger(\"selectDate\", [_.$active.date, oldDate])\n    };\n    \n    // v1.0.0 - Return active date\n    EvoCalendar.prototype.getActiveDate = function() {\n        var _ = this;\n        return _.$active.date;\n    }\n    \n    // v1.0.0 - Return active events\n    EvoCalendar.prototype.getActiveEvents = function() {\n        var _ = this;\n        return _.$active.events;\n    }\n\n    // v1.0.0 - Hide Sidebar/Event List if clicked outside\n    EvoCalendar.prototype.toggleOutside = function(event) {\n        var _ = this, isInnerClicked;\n        \n        isInnerClicked = event.target === _.$elements.innerEl[0];\n\n        if (_.$UI.hasSidebar && isInnerClicked) _.toggleSidebar(false);\n        if (_.$UI.hasEvent && isInnerClicked) _.toggleEventList(false);\n    }\n\n    // v1.0.0 - Toggle Sidebar\n    EvoCalendar.prototype.toggleSidebar = function(event) {\n        var _ = this;\n\n        if (event === undefined || event.originalEvent) {\n            $(_.$elements.calendarEl).toggleClass('sidebar-hide');\n            _.$UI.hasSidebar = !_.$UI.hasSidebar;\n        } else {\n            if(event) {\n                $(_.$elements.calendarEl).removeClass('sidebar-hide');\n                _.$UI.hasSidebar = true;\n            } else {\n                $(_.$elements.calendarEl).addClass('sidebar-hide');\n                _.$UI.hasSidebar = false;\n            }\n        }\n\n        if (_.windowW <= _.$breakpoints.tablet) {\n            if (_.$UI.hasSidebar && _.$UI.hasEvent) _.toggleEventList();\n        }\n    };\n\n    // v1.0.0 - Toggle Event list\n    EvoCalendar.prototype.toggleEventList = function(event) {\n        var _ = this;\n\n        if (event === undefined || event.originalEvent) {\n            $(_.$elements.calendarEl).toggleClass('event-hide');\n            _.$UI.hasEvent = !_.$UI.hasEvent;\n        } else {\n            if(event) {\n                $(_.$elements.calendarEl).removeClass('event-hide');\n                _.$UI.hasEvent = true;\n            } else {\n                $(_.$elements.calendarEl).addClass('event-hide');\n                _.$UI.hasEvent = false;\n            }\n        }\n\n        if (_.windowW <= _.$breakpoints.tablet) {\n            if (_.$UI.hasEvent && _.$UI.hasSidebar) _.toggleSidebar();\n        }\n    };\n\n    // v1.0.0 - Add Calendar Event(s)\n    EvoCalendar.prototype.addCalendarEvent = function(arr) {\n        var _ = this;\n\n        function addEvent(data) {\n            if(!data.id) {\n                console.log(\"%c Event named: \\\"\"+data.name+\"\\\" doesn't have a unique ID \", \"color:white;font-weight:bold;background-color:#e21d1d;\");\n            }\n\n            if (data.date instanceof Array) {\n                for (var j=0; j < data.date.length; j++) {\n                    if(isDateValid(data.date[j])) {\n                        data.date[j] = _.formatDate(new Date(data.date[j]), _.options.format);\n                    }\n                }\n            } else {\n                if(isDateValid(data.date)) {\n                    data.date = _.formatDate(new Date(data.date), _.options.format);\n                }\n            }\n            \n            if (!_.options.calendarEvents) _.options.calendarEvents = [];\n            _.options.calendarEvents.push(data);\n            // add to date's indicator\n            _.addEventIndicator(data);\n            // add to event list IF active.event_date === data.date\n            if (_.$active.event_date === data.date) _.addEventList(data);\n            // _.$elements.innerEl.find(\"[data-date-val='\" + data.date + \"']\")\n\n            function isDateValid(date) {\n                if(_.isValidDate(date)) {\n                    return true;\n                } else {\n                    console.log(\"%c Event named: \\\"\"+data.name+\"\\\" has invalid date \", \"color:white;font-weight:bold;background-color:#e21d1d;\");\n                }\n                return false;\n            }\n        }\n        if (arr instanceof Array) { // Arrays of events\n            for(var i=0; i < arr.length; i++) {\n                addEvent(arr[i])\n            }\n        } else if (typeof arr === 'object') { // Single event\n            addEvent(arr)\n        }\n    };\n\n    // v1.0.0 - Remove Calendar Event(s)\n    EvoCalendar.prototype.removeCalendarEvent = function(arr) {\n        var _ = this;\n\n        function deleteEvent(data) {\n            // Array index\n            var index = _.options.calendarEvents.map(function (event) { return event.id }).indexOf(data);\n            \n            if (index >= 0) {\n                var event = _.options.calendarEvents[index];\n                // Remove event from calendar events\n                _.options.calendarEvents.splice(index, 1);\n                // remove to event list\n                _.removeEventList(data);\n                // remove event indicator\n                _.removeEventIndicator(event);\n            } else {\n                console.log(\"%c \"+data+\": ID not found \", \"color:white;font-weight:bold;background-color:#e21d1d;\");\n            }\n        }\n        if (arr instanceof Array) { // Arrays of index\n            for(var i=0; i < arr.length; i++) {\n                deleteEvent(arr[i])\n            }\n        } else { // Single index\n            deleteEvent(arr)\n        }\n    };\n\n    // v1.0.0 - Check if date is valid\n    EvoCalendar.prototype.isValidDate = function(d){\n        return new Date(d) && !isNaN(new Date(d).getTime());\n    }\n\n    $.fn.evoCalendar = function() {\n        var _ = this,\n            opt = arguments[0],\n            args = Array.prototype.slice.call(arguments, 1),\n            l = _.length,\n            i,\n            ret;\n        for (i = 0; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].evoCalendar = new EvoCalendar(_[i], opt);\n            else\n                ret = _[i].evoCalendar[opt].apply(_[i].evoCalendar, args);\n            if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n}));\n","import './evo-calendar'\r\n\r\n$(document).ready(function(){\r\n\r\n    const serviceEvents = [\r\n        { \r\n            id: \"required-id-1\",\r\n            name: \"busy\", \r\n            date: \"2022/11/11\",\r\n            type: \"enable\", \r\n            name:\"15:00 - 17:00\",\r\n            description:\"3 мест(а)\"\r\n        },\r\n    ];\r\n\r\n    const roomEvents = [\r\n        { \r\n            id: \"required-id-1\",\r\n            name: \"busy\", \r\n            date: \"2022/11/11\",\r\n            type: \"busy\", \r\n        },\r\n        { \r\n            id: \"required-id-2\",\r\n            name: \"busy\", \r\n            date: \"2022/11/12\",\r\n            type: \"busy\", \r\n        },\r\n        { \r\n            id: \"required-id-3\",\r\n            name: \"busy\", \r\n            date: \"2022/11/13\",\r\n            type: \"busy\", \r\n        },\r\n        \r\n    ];\r\n\r\n\r\n    $('.calendar__service').evoCalendar({\r\n        calendarEvents: serviceEvents,\r\n\r\n        format: 'yyyy/mm/dd',\r\n\r\n        sidebarDisplayDefault: false,\r\n        sidebarToggler: true,\r\n\r\n        eventListToggler: false,\r\n\r\n        eventDisplayDefault: false,\r\n\r\n        language:'ru',\r\n\r\n        firstDayOfWeek: 1\r\n    });\r\n\r\n    $('.calendar__room').evoCalendar({\r\n        calendarEvents: roomEvents,\r\n\r\n        format: 'yyyy/mm/dd',\r\n\r\n        sidebarDisplayDefault: false,\r\n        sidebarToggler: true,\r\n\r\n        eventDisplayDefault: false,\r\n        eventListToggler: false,\r\n\r\n        language:'ru',\r\n\r\n        firstDayOfWeek: 1\r\n    });\r\n\r\n    $('.calendar__service .calendar-events').addClass('calendar-events__required');\r\n   \r\n    $('.calendar__service').on('selectMonth', function(){\r\n        $(\".event-indicator\").each(function(){              // если на день есть событие, оказываем услугу в этот день\r\n            $(this).parent().addClass('day-enable');\r\n        });\r\n    });\r\n\r\n    $('.calendar__room').on('selectMonth', function(){\r\n        $(\".event-indicator\").each(function(){              // если на день есть событие, то номер занят\r\n            $(this).parent().addClass('day-busy');\r\n        });\r\n    });\r\n\r\n    $('.evoCalendar').evoCalendar('selectMonth', new Date().getMonth());    // выбираем текущий месяц\r\n    \r\n});","$(document).ready(function(){\r\n    $(\"[data-goto]\").on('click', function(e){\r\n        e.stopPropagation();\r\n        window.location.href = e.currentTarget.getAttribute('data-goto');\r\n    });\r\n\r\n    $(\".offers\").on('click', function(e){\r\n        console.log(\"asd\");\r\n        const elem = e.target.closest('[data-goto]');                                       // в списке офферов (скидки) есть элементы, добавляющиеся диначимески.\r\n        if(!elem) return;                                                                   // поэтому будет искать в его дочерних элементах\r\n        if (elem.dataset.goto) window.location.href = elem.dataset.goto;\r\n    });\r\n});"],"names":[],"sourceRoot":""}